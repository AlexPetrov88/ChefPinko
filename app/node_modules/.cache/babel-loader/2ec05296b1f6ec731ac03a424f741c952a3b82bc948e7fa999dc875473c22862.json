{"ast":null,"code":"// import { createContext, useState, useContext } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useLocalStorage } from '../hooks/useLocalStorage';\n\n// import * as recipesService  from '../services/recipesService'; \n\nimport { createContext } from \"react\";\nexport const GlobalContext = /*#__PURE__*/createContext();\n\n// export const GlobalProvider = ({\n//     children,\n// }) => {\n//     const [userState, setUserState] = useLocalStorage('user', {});\n//     const navigate = useNavigate();\n\n//     // const userService = userServiceFactory(userState.accessToken)\n\n//      // LOGIN\n//      const onLoginSubmit = async (data) => {\n//         if (data.email === '' || data.password === '') {\n//             alert('All fealds are required!');\n//             return;\n//         }\n//     try {\n//         const result = await recipesService.login(data.email, data.password);\n\n//         setUserState(result);\n\n//         navigate('/catalog');\n//     } catch (error) {\n//         alert(`error: ${error}`);\n//     }\n//     };\n\n//     // REGISTER\n//     const onRegisterSubmit = async (data) => {\n//         if (data.email === '' || data.password === '') {\n//             alert('All fealds are required!');\n//             return;\n//         } \n\n//         if (data.password !== data['confirm-password']) {\n//             alert('Password don\\'t match');\n//             return;\n//         }\n\n//             try {\n//                 const result = await recipesService.register(data.email, data.password);\n\n//                 setUserState(result);\n\n//                 navigate('/catalog');\n//             } catch (error) {\n//                 alert(`error: ${error}`);\n//             }\n\n//         };  \n\n//     // LOGOUT\n\n//     const onLogoutSubmit = async () => {\n//         await recipesService.logout();\n//         setUserState({});\n\n//     } \n\n//     console.log(userState);\n//     const contextValues = {\n//         onLoginSubmit,\n//         onRegisterSubmit,\n//         onLogoutSubmit,\n//         userId: userState._id,\n//         token: userState.accessToken,\n//         userEmail: userState.email,\n//         isAuthenticated: !!userState.accessToken,\n//     };\n\n//     return (\n//         <>\n//             <GlobalContext.Provider value={contextValues}>\n//                 {children}\n//             </GlobalContext.Provider>\n//         </>\n//     )\n// };\n\n// export const useAuthContext = () => {\n//     const context = useContext(GlobalContext);\n\n//     return context;\n// }\n\n// // where we set context\n//         import { GlobalContext } from './GlobalContext';\n\n//         const contextValues = {\n//             onChangeHandler,\n//             values,\n//         };\n\n//         return (\n//             <GlobalContext.Provider value={contextValues}>\n//             <Header /> \n\n//             <CreatePage />\n//             </GlobalContext.Provider>\n//         )\n\n// // where we use context\n//         import { useContext } from 'react'; \n//         import { GlobalContext } from './GlobalContext';\n\n// // write in component where we use context above return\n//         const { name, age, onChangeHandler } = useContext(GlobalContext);","map":{"version":3,"names":["createContext","GlobalContext"],"sources":["/Users/alexpetrov/JavaScript/ReactApps/projectChefSteps copy/client/src/contexts/GlobalContext.js"],"sourcesContent":["// import { createContext, useState, useContext } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useLocalStorage } from '../hooks/useLocalStorage';\n\n// import * as recipesService  from '../services/recipesService'; \n\nimport { createContext } from \"react\";\n\nexport const GlobalContext = createContext();\n\n\n// export const GlobalProvider = ({\n//     children,\n// }) => {\n//     const [userState, setUserState] = useLocalStorage('user', {});\n//     const navigate = useNavigate();\n\n//     // const userService = userServiceFactory(userState.accessToken)\n\n//      // LOGIN\n//      const onLoginSubmit = async (data) => {\n//         if (data.email === '' || data.password === '') {\n//             alert('All fealds are required!');\n//             return;\n//         }\n//     try {\n//         const result = await recipesService.login(data.email, data.password);\n    \n//         setUserState(result);\n    \n//         navigate('/catalog');\n//     } catch (error) {\n//         alert(`error: ${error}`);\n//     }\n//     };\n\n//     // REGISTER\n//     const onRegisterSubmit = async (data) => {\n//         if (data.email === '' || data.password === '') {\n//             alert('All fealds are required!');\n//             return;\n//         } \n        \n//         if (data.password !== data['confirm-password']) {\n//             alert('Password don\\'t match');\n//             return;\n//         }\n    \n//             try {\n//                 const result = await recipesService.register(data.email, data.password);\n\n//                 setUserState(result);\n\n//                 navigate('/catalog');\n//             } catch (error) {\n//                 alert(`error: ${error}`);\n//             }\n            \n//         };  \n\n//     // LOGOUT\n\n//     const onLogoutSubmit = async () => {\n//         await recipesService.logout();\n//         setUserState({});\n        \n//     } \n\n//     console.log(userState);\n//     const contextValues = {\n//         onLoginSubmit,\n//         onRegisterSubmit,\n//         onLogoutSubmit,\n//         userId: userState._id,\n//         token: userState.accessToken,\n//         userEmail: userState.email,\n//         isAuthenticated: !!userState.accessToken,\n//     };\n\n//     return (\n//         <>\n//             <GlobalContext.Provider value={contextValues}>\n//                 {children}\n//             </GlobalContext.Provider>\n//         </>\n//     )\n// };\n\n// export const useAuthContext = () => {\n//     const context = useContext(GlobalContext);\n\n//     return context;\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // where we set context\n//         import { GlobalContext } from './GlobalContext';\n\n//         const contextValues = {\n//             onChangeHandler,\n//             values,\n//         };\n\n//         return (\n//             <GlobalContext.Provider value={contextValues}>\n//             <Header /> \n\n//             <CreatePage />\n//             </GlobalContext.Provider>\n//         )\n\n\n// // where we use context\n//         import { useContext } from 'react'; \n//         import { GlobalContext } from './GlobalContext';\n\n\n// // write in component where we use context above return\n//         const { name, age, onChangeHandler } = useContext(GlobalContext);       "],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA,SAASA,aAAa,QAAQ,OAAO;AAErC,OAAO,MAAMC,aAAa,gBAAGD,aAAa,EAAE;;AAG5C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAiBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}