{"ast":null,"code":"var _jsxFileName = \"/Users/alexpetrov/Documents/GitTesting/ChefPinko copy copy/app/src/components/GuideAndTools/Tools.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import YouTube from 'react-youtube';\n\n// export const Tools = () => {\n//   const [videoId, setVideoId] = useState('VIDEO_ID');\n\n//   const handleVideoChange = (event) => {\n//     const newVideoId = event.target.value;\n//     setVideoId(newVideoId);\n//   };\n\n//   const opts = {\n//     height: '360',\n//     width: '640',\n//     playerVars: {\n//       autoplay: 1,\n//     },\n//   };\n\n//   return (\n//     <div>\n//       <h2>YouTube Video Player</h2>\n//       <label htmlFor=\"videoId\">Enter YouTube Video ID:</label>\n//       <input id=\"videoId\" type=\"text\" onChange={handleVideoChange} value={videoId} />\n//       <br />\n//       <YouTube videoId={videoId} opts={opts} />\n//     </div>\n//   );\n// };\n\n// import React from 'react';\n\n// export const Tools = () => {\n//   return (\n//     <div>\n//       <h2>Video Player</h2>\n//       <video controls>\n//         <source src=\"../../../public/images/1.mp4\" type=\"video/mp4\" />\n//         Your browser does not support the video tag.\n//       </video>\n//     </div>\n//   );\n// };\n\n// import React from 'react';\n\n// export function Tools() {\n//   return (\n//     <div>\n//       <video controls>\n//         <source src=\"../../../public/video/1.mp4\" type=\"video/mp4\" />\n//         Your browser does not support the video tag.\n//       </video>\n//     </div>\n//   );\n// }\nimport styles from \"./Tools.module.css\";\nimport ReactPlayer from 'react-player';\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VIDEO_PATH = 'https://www.youtube.com/watch?v=2fOtug1CXxc';\nexport function Tools() {\n  _s();\n  const playerRef = useRef(null);\n  const [expanded, setExpanded] = useState(false);\n  const toggleExpanded = () => {\n    setExpanded(!expanded);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        ref: playerRef,\n        url: VIDEO_PATH,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text ${expanded ? 'expanded' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed id enim ipsum. Donec ac leo porttitor, auctor nunc sed, cursus ante. Ut ac quam diam. Curabitur ut erat eget ipsum efficitur pretium eget eu odio. In in nunc auctor, vehicula enim vitae, euismod est. Proin et dolor purus.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Maecenas in velit vestibulum, laoreet ante eu, commodo odio. Vestibulum id enim tortor. Etiam viverra euismod nisl in pretium. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Ut congue lectus at urna dapibus, ac tincidunt orci laoreet. Pellentesque euismod tristique tincidunt. Sed gravida posuere ipsum, quis vestibulum metus convallis ac.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Suspendisse eget faucibus velit. Nunc facilisis at lorem vitae eleifend. Pellentesque lobortis nisl quis quam lobortis lobortis. Etiam ultrices ligula in lobortis ultrices. Donec laoreet interdum est, vel dictum massa imperdiet sit amet. Suspendisse potenti. In scelerisque eget leo vel feugiat. Maecenas commodo eros purus, vel tincidunt eros rutrum ut. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleExpanded,\n        className: `read-more ${expanded ? 'hide' : ''}`,\n        children: expanded ? 'Read Less' : 'Read More'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Tools, \"UUUiLu4voNLMLxaGIdWnf9sxuyU=\");\n_c = Tools;\n;\n\n// import YouTube from 'react-youtube';\n\n// export const Tools = () => {\n\n//     const videoId = \"v=veRGP3hemLQ&t=2647s\";\n//     const opts = {\n//         height: '360',\n//         width: '640',\n//         playerVars: {\n//           autoplay: 1,\n//         },\n//     };\n\n//     return(\n//         <div>\n//         <h2>YouTube Video Player</h2>\n//         <br />\n//         <YouTube videoId={videoId} opts={opts} />\n//     </div>\n//     );\n// }\n\n// import React from 'react';\n// import YouTube from 'react-youtube';\n\n// export const Tools = () => {\n//   const opts = {\n//     height: '360',\n//     width: '640',\n//     playerVars: {\n//       autoplay: 1,\n//     },\n//   };\n\n//   return (\n//     <div>\n//       <h2>YouTube Video Player</h2>\n//       <YouTube videoId=\"v=L_Guz73e6fw\" opts={opts} />\n//     </div>\n//   );\n// };\nvar _c;\n$RefreshReg$(_c, \"Tools\");","map":{"version":3,"names":["styles","ReactPlayer","React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","VIDEO_PATH","Tools","_s","playerRef","expanded","setExpanded","useState","toggleExpanded","children","ref","url","controls","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/alexpetrov/Documents/GitTesting/ChefPinko copy copy/app/src/components/GuideAndTools/Tools.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import YouTube from 'react-youtube';\n\n// export const Tools = () => {\n//   const [videoId, setVideoId] = useState('VIDEO_ID');\n\n//   const handleVideoChange = (event) => {\n//     const newVideoId = event.target.value;\n//     setVideoId(newVideoId);\n//   };\n\n//   const opts = {\n//     height: '360',\n//     width: '640',\n//     playerVars: {\n//       autoplay: 1,\n//     },\n//   };\n\n//   return (\n//     <div>\n//       <h2>YouTube Video Player</h2>\n//       <label htmlFor=\"videoId\">Enter YouTube Video ID:</label>\n//       <input id=\"videoId\" type=\"text\" onChange={handleVideoChange} value={videoId} />\n//       <br />\n//       <YouTube videoId={videoId} opts={opts} />\n//     </div>\n//   );\n// };\n\n\n\n// import React from 'react';\n\n// export const Tools = () => {\n//   return (\n//     <div>\n//       <h2>Video Player</h2>\n//       <video controls>\n//         <source src=\"../../../public/images/1.mp4\" type=\"video/mp4\" />\n//         Your browser does not support the video tag.\n//       </video>\n//     </div>\n//   );\n// };\n\n\n// import React from 'react';\n\n// export function Tools() {\n//   return (\n//     <div>\n//       <video controls>\n//         <source src=\"../../../public/video/1.mp4\" type=\"video/mp4\" />\n//         Your browser does not support the video tag.\n//       </video>\n//     </div>\n//   );\n// }\nimport styles from \"./Tools.module.css\";\nimport ReactPlayer from 'react-player';\nimport React, { useRef } from 'react';\nconst VIDEO_PATH = 'https://www.youtube.com/watch?v=2fOtug1CXxc';\nexport function Tools() {\n        const playerRef = useRef(null);\n\n        const [expanded, setExpanded] = useState(false);\n\n        const toggleExpanded = () => {\n        setExpanded(!expanded);\n}\n   return (\n      <>\n            <div>\n                <ReactPlayer ref={playerRef} url={VIDEO_PATH} controls={true} />\n            </div>\n            <div className=\"text-container\">\n    <div className={`text ${expanded ? 'expanded' : ''}`}>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed id enim ipsum. Donec ac leo porttitor, auctor nunc sed, cursus ante. Ut ac quam diam. Curabitur ut erat eget ipsum efficitur pretium eget eu odio. In in nunc auctor, vehicula enim vitae, euismod est. Proin et dolor purus.</p>\n      <p>Maecenas in velit vestibulum, laoreet ante eu, commodo odio. Vestibulum id enim tortor. Etiam viverra euismod nisl in pretium. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Ut congue lectus at urna dapibus, ac tincidunt orci laoreet. Pellentesque euismod tristique tincidunt. Sed gravida posuere ipsum, quis vestibulum metus convallis ac.</p>\n      <p>Suspendisse eget faucibus velit. Nunc facilisis at lorem vitae eleifend. Pellentesque lobortis nisl quis quam lobortis lobortis. Etiam ultrices ligula in lobortis ultrices. Donec laoreet interdum est, vel dictum massa imperdiet sit amet. Suspendisse potenti. In scelerisque eget leo vel feugiat. Maecenas commodo eros purus, vel tincidunt eros rutrum ut. </p>\n    </div>\n    <button onClick={toggleExpanded} className={`read-more ${expanded ? 'hide' : ''}`}>{expanded ? 'Read Less' : 'Read More'}</button>\n  </div>\n       </>\n   )\n};\n\n\n\n\n\n\n// import YouTube from 'react-youtube';\n\n// export const Tools = () => {\n\n//     const videoId = \"v=veRGP3hemLQ&t=2647s\";\n//     const opts = {\n//         height: '360',\n//         width: '640',\n//         playerVars: {\n//           autoplay: 1,\n//         },\n//     };\n\n//     return(\n//         <div>\n//         <h2>YouTube Video Player</h2>\n//         <br />\n//         <YouTube videoId={videoId} opts={opts} />\n//     </div>\n//     );\n// }\n\n// import React from 'react';\n// import YouTube from 'react-youtube';\n\n// export const Tools = () => {\n//   const opts = {\n//     height: '360',\n//     width: '640',\n//     playerVars: {\n//       autoplay: 1,\n//     },\n//   };\n\n//   return (\n//     <div>\n//       <h2>YouTube Video Player</h2>\n//       <YouTube videoId=\"v=L_Guz73e6fw\" opts={opts} />\n//     </div>\n//   );\n// };\n\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACtC,MAAMC,UAAU,GAAG,6CAA6C;AAChE,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC7BF,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC9B,CAAC;EACE,oBACGP,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACMX,OAAA;MAAAW,QAAA,eACIX,OAAA,CAACJ,WAAW;QAACgB,GAAG,EAAEN,SAAU;QAACO,GAAG,EAAEV,UAAW;QAACW,QAAQ,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9D,eACNlB,OAAA;MAAKmB,SAAS,EAAC,gBAAgB;MAAAR,QAAA,gBACvCX,OAAA;QAAKmB,SAAS,EAAG,QAAOZ,QAAQ,GAAG,UAAU,GAAG,EAAG,EAAE;QAAAI,QAAA,gBACnDX,OAAA;UAAAW,QAAA,EAAG;QAA0R;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eACjSlB,OAAA;UAAAW,QAAA,EAAG;QAAkY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eACzYlB,OAAA;UAAAW,QAAA,EAAG;QAAmW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtW,eACNlB,OAAA;QAAQoB,OAAO,EAAEV,cAAe;QAACS,SAAS,EAAG,aAAYZ,QAAQ,GAAG,MAAM,GAAG,EAAG,EAAE;QAAAI,QAAA,EAAEJ,QAAQ,GAAG,WAAW,GAAG;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9H;EAAA,gBACE;AAEV;AAACb,EAAA,CAvBeD,KAAK;AAAAiB,EAAA,GAALjB,KAAK;AAuBpB;;AAOD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}