{"ast":null,"code":"// import { useEffect, useReducer } from \"react\";\n// import { useParams, Link } from \"react-router-dom\";\n// import { useContext } from 'react'; \n// import { GlobalContext } from '../../contexts/GlobalContext';\n\n// import * as appService from \"../../services/appService\";\n\n// // import { AddComment } from './AddComment/AddComment';\n// import { reducer } from '../../reducer/reducer';\n// import { RecipeContext } from \"../../contexts/RecipeContext\";\n\n// import React, { useState } from 'react';\n// import YouTube from 'react-youtube';\n\n// export const DetailsClasses = () => {\n//     const { onDeleteRecipe } = useContext(RecipeContext);\n//     const { detailsId } = useParams();\n//     const { userId, isAuthenticated, userEmail } = useContext(GlobalContext);\n//     // const [ recipeData, setRecipeData ] = useState({});\n//     const [recipe, dispatch] = useReducer(reducer, {});\n\n//     // useEffect(() => {\n//     //     appService.getRecipeById(detailsId)\n//     //     .then(res => {\n//     //         setRecipeData(res);\n//     //     })\n//     // }, [detailsId])\n\n//     useEffect(() => {\n//         Promise.all([\n//             appService.getRecipeById(detailsId),\n//             appService.getCommentsById(detailsId),\n//         ]).then(([recipeData, comments]) => {\n//             // console.log(recipeData);\n//             // console.log(comments);\n//             const recipeState = {\n//                 ...recipeData,\n//                 comments,\n//             };\n//             // console.log(recipeState);\n\n//             dispatch({type: 'RECIPE_FETCH', payload: recipeState})\n//         });\n//     }, [detailsId]);\n\n//     const onCommentSubmit = async (values) => {\n//         const response = await appService.postCreateCommets(detailsId, values.comment);\n//         console.log(response);\n//         dispatch({\n//             type: 'COMMENT_ADD',\n//             payload: response,\n//             userEmail,\n//         });\n//     };\n\n//     const isOwner = recipe._ownerId === userId;\n//     console.log(recipe);\n\n//     const videoId = \"v=wMdUrxOXsqU\";\n//     const opts = {\n//         height: '360',\n//         width: '640',\n//         playerVars: {\n//           autoplay: 1,\n//         },\n//     };\n\n//     return(\n//         <section className=\"details\">\n//              <div>\n//                 <h2>YouTube Video Player</h2>\n//                 <br />\n//                 <YouTube videoId={videoId} opts={opts} />\n//             </div>\n\n//             <div className=\"detailsContainer\">\n//                 <div className=\"detailImgContainer\">\n//                     <img src={recipe.imageUrl} alt=\"\" className=\"daetailImg\" />\n//                 </div>\n//                 <div className=\"detailContent\">\n//                     <h2 className=\"recipeTitle\">Recipe Details</h2>\n//                     <h3 className=\"recipeName\">{recipe.recipeName}</h3>\n//                     <span className=\"recipeChef\">{recipe.chef}</span>\n//                     <p className=\"recipeTimeForCooking\">{recipe.time}</p>\n//                     <p className=\"recipeSummary\">{recipe.summary}</p>\n//                     {isOwner && (\n//                         <>\n//                         <button className=\"btn\" onClick={() => onDeleteRecipe(detailsId)}>Delete</button>\n//                         <Link to={`/catalog/${detailsId}/editPage`} className=\"link\" ><button className=\"btn\">Edit</button></Link>\n//                         </>\n//                     )}\n//                     {isAuthenticated && (\n//                         <button className=\"btn\">Rating</button>\n//                     )}\n//                 </div>\n//                 {/* <div className=\"details-comments\">\n//                     <h2>Comments:</h2>\n//                     <ul role=\"list\">\n//                         {recipe.comments && recipe.comments.map(x => (\n//                             <li key={x._id} className=\"comment\" >\n//                                 <p>{x.author.email}: {x.comment}</p>\n//                             </li>\n//                         ))}\n//                     </ul>\n\n//                     {!recipe.comments?.length && (\n//                         <p className=\"no-comment\">No comments.</p>\n//                     )}\n//                 </div> */}\n//                 {/* {isAuthenticated && <AddComment onCommentSubmit={onCommentSubmit} />} */}\n//             </div>\n\n//         </section>\n//     );\n// }","map":{"version":3,"names":[],"sources":["/Users/alexpetrov/Documents/GitTesting/ChefPinko copy copy/app/src/components/DetailsClasses/DetailsClasses.js"],"sourcesContent":["// import { useEffect, useReducer } from \"react\";\n// import { useParams, Link } from \"react-router-dom\";\n// import { useContext } from 'react'; \n// import { GlobalContext } from '../../contexts/GlobalContext';\n\n\n// import * as appService from \"../../services/appService\";\n\n// // import { AddComment } from './AddComment/AddComment';\n// import { reducer } from '../../reducer/reducer';\n// import { RecipeContext } from \"../../contexts/RecipeContext\";\n\n// import React, { useState } from 'react';\n// import YouTube from 'react-youtube';\n\n// export const DetailsClasses = () => {\n//     const { onDeleteRecipe } = useContext(RecipeContext);\n//     const { detailsId } = useParams();\n//     const { userId, isAuthenticated, userEmail } = useContext(GlobalContext);\n//     // const [ recipeData, setRecipeData ] = useState({});\n//     const [recipe, dispatch] = useReducer(reducer, {});\n\n\n//     // useEffect(() => {\n//     //     appService.getRecipeById(detailsId)\n//     //     .then(res => {\n//     //         setRecipeData(res);\n//     //     })\n//     // }, [detailsId])\n\n//     useEffect(() => {\n//         Promise.all([\n//             appService.getRecipeById(detailsId),\n//             appService.getCommentsById(detailsId),\n//         ]).then(([recipeData, comments]) => {\n//             // console.log(recipeData);\n//             // console.log(comments);\n//             const recipeState = {\n//                 ...recipeData,\n//                 comments,\n//             };\n//             // console.log(recipeState);\n            \n//             dispatch({type: 'RECIPE_FETCH', payload: recipeState})\n//         });\n//     }, [detailsId]);\n\n//     const onCommentSubmit = async (values) => {\n//         const response = await appService.postCreateCommets(detailsId, values.comment);\n//         console.log(response);\n//         dispatch({\n//             type: 'COMMENT_ADD',\n//             payload: response,\n//             userEmail,\n//         });\n//     };\n   \n//     const isOwner = recipe._ownerId === userId;\n//     console.log(recipe);\n\n//     const videoId = \"v=wMdUrxOXsqU\";\n//     const opts = {\n//         height: '360',\n//         width: '640',\n//         playerVars: {\n//           autoplay: 1,\n//         },\n//     };\n\n//     return(\n//         <section className=\"details\">\n//              <div>\n//                 <h2>YouTube Video Player</h2>\n//                 <br />\n//                 <YouTube videoId={videoId} opts={opts} />\n//             </div>\n\n//             <div className=\"detailsContainer\">\n//                 <div className=\"detailImgContainer\">\n//                     <img src={recipe.imageUrl} alt=\"\" className=\"daetailImg\" />\n//                 </div>\n//                 <div className=\"detailContent\">\n//                     <h2 className=\"recipeTitle\">Recipe Details</h2>\n//                     <h3 className=\"recipeName\">{recipe.recipeName}</h3>\n//                     <span className=\"recipeChef\">{recipe.chef}</span>\n//                     <p className=\"recipeTimeForCooking\">{recipe.time}</p>\n//                     <p className=\"recipeSummary\">{recipe.summary}</p>\n//                     {isOwner && (\n//                         <>\n//                         <button className=\"btn\" onClick={() => onDeleteRecipe(detailsId)}>Delete</button>\n//                         <Link to={`/catalog/${detailsId}/editPage`} className=\"link\" ><button className=\"btn\">Edit</button></Link>\n//                         </>\n//                     )}\n//                     {isAuthenticated && (\n//                         <button className=\"btn\">Rating</button>\n//                     )}\n//                 </div>\n//                 {/* <div className=\"details-comments\">\n//                     <h2>Comments:</h2>\n//                     <ul role=\"list\">\n//                         {recipe.comments && recipe.comments.map(x => (\n//                             <li key={x._id} className=\"comment\" >\n//                                 <p>{x.author.email}: {x.comment}</p>\n//                             </li>\n//                         ))}\n//                     </ul>\n\n//                     {!recipe.comments?.length && (\n//                         <p className=\"no-comment\">No comments.</p>\n//                     )}\n//                 </div> */}\n//                 {/* {isAuthenticated && <AddComment onCommentSubmit={onCommentSubmit} />} */}\n//             </div>\n            \n\n//         </section>\n//     );\n// }\n\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}