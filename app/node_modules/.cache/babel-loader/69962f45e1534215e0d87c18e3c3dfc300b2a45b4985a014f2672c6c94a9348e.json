{"ast":null,"code":"var _jsxFileName = \"/Users/alexpetrov/JavaScript/ReactApps/projectChefSteps copy/client/src/components/CreatePage/CreatePage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n// import { useContext } from \"react\";\n// import { Navigate } from \"react-router\";\n// import { GlobalContext } from \"../../contexts/GlobalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreatePage = _ref => {\n  _s();\n  let {\n    onCreateRecipe\n  } = _ref;\n  const [createValues, setCreateValues] = useState({\n    recipeName: '',\n    chef: '',\n    time: '',\n    imageUrl: '',\n    summary: ''\n  });\n  // const { onCreateRecipe } = useContext(GlobalContext);\n  const onChangeHandler = e => {\n    setCreateValues(state => ({\n      ...state,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    onCreateRecipe(createValues);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"create-page\",\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"create\",\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeName\",\n          children: \"Recipe name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: createValues.recipeName,\n          onChange: onChangeHandler,\n          type: \"text\",\n          id: \"recipeName\",\n          name: \"recipeName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeChef\",\n          children: \"Chef:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: createValues.chef,\n          onChange: onChangeHandler,\n          type: \"text\",\n          id: \"recipeChef\",\n          name: \"chef\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"leg-title\",\n          children: \"Time for cooking:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: createValues.time,\n          onChange: onChangeHandler,\n          type: \"text\",\n          id: \"title\",\n          name: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeImg\",\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: createValues.imageUrl,\n          onChange: onChangeHandler,\n          type: \"text\",\n          id: \"imageUrl\",\n          name: \"imageUrl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"summary\",\n          children: \"Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: createValues.summary,\n          onChange: onChangeHandler,\n          name: \"summary\",\n          id: \"summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn submit\",\n          type: \"submit\",\n          value: \"Create Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n// import { useState } from \"react\";\n// import { useContext } from 'react'; \n// import { GlobalContext } from '../../contexts/GlobalContext';\n// export const CreatePage = () => {\n//     const { onCreateGameSubmit } = useContext(GlobalContext);\n//     const [values, setValues] = useState({\n//             title: '',\n//             category: '',\n//             maxLevel: '',\n//             imageUrl: '',\n//             summary: '',\n//     })\n\n//     const onChangeHandler = (e) => {\n//         setValues(state => ({...state, [e.target.name]: e.target.value}))\n//     }\n\n//     const onSubmit = (e) => {\n//         e.preventDefault();\n\n//         onCreateGameSubmit(values);\n//     }\n//     return(\n//         <section id=\"create-page\" className=\"auth\">\n//             <form id=\"create\" onSubmit={onSubmit}>\n//                 <div className=\"container\">\n\n//                     <h1>Create Game</h1>\n//                     <label htmlFor=\"leg-title\">Legendary title:</label>\n//                     <input value={values.title} onChange={onChangeHandler} type=\"text\" id=\"title\" name=\"title\" placeholder=\"Enter game title...\" />\n\n//                     <label htmlFor=\"category\">Category:</label>\n//                     <input value={values.category} onChange={onChangeHandler} type=\"text\" id=\"category\" name=\"category\" placeholder=\"Enter game category...\" />\n\n//                     <label htmlFor=\"levels\">MaxLevel:</label>\n//                     <input value={values.maxLevel} onChange={onChangeHandler} type=\"number\" id=\"maxLevel\" name=\"maxLevel\" min=\"1\" placeholder=\"1\" />\n\n//                     <label htmlFor=\"game-img\">Image:</label>\n//                     <input value={values.imageUrl} onChange={onChangeHandler} type=\"text\" id=\"imageUrl\" name=\"imageUrl\" placeholder=\"Upload a photo...\" />\n\n//                     <label htmlFor=\"summary\">Summary:</label>\n//                     <textarea value={values.summary} onChange={onChangeHandler} name=\"summary\" id=\"summary\"></textarea>\n//                     <input className=\"btn submit\" type=\"submit\" value=\"Create Game\" />\n//                 </div>\n//             </form>\n//         </section>\n//     );\n// }\n_s(CreatePage, \"OOdWtdBMzWivTP6POksEkVdutjA=\");\n_c = CreatePage;\nvar _c;\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","CreatePage","_ref","_s","onCreateRecipe","createValues","setCreateValues","recipeName","chef","time","imageUrl","summary","onChangeHandler","e","state","target","name","value","onSubmit","preventDefault","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","type","_c","$RefreshReg$"],"sources":["/Users/alexpetrov/JavaScript/ReactApps/projectChefSteps copy/client/src/components/CreatePage/CreatePage.js"],"sourcesContent":["import { useState } from \"react\";\n// import { useContext } from \"react\";\n// import { Navigate } from \"react-router\";\n// import { GlobalContext } from \"../../contexts/GlobalContext\";\n\nexport const CreatePage = ({\n    onCreateRecipe,\n}) => {\n    const [createValues, setCreateValues] = useState({\n        recipeName: '',\n        chef: '',\n        time: '',\n        imageUrl: '',\n        summary: '',\n    });\n    // const { onCreateRecipe } = useContext(GlobalContext);\n    const onChangeHandler = (e) => {\n        setCreateValues(state => ({...state, [e.target.name]: e.target.value}));\n    } \n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        onCreateRecipe(createValues);\n    } \n\n    return(\n        <section id=\"create-page\" className=\"auth\">\n            <form id=\"create\" onSubmit={onSubmit}>\n                <div className=\"container\">\n\n                    <h1>Create Game</h1>\n                    <label htmlFor=\"recipeName\">Recipe name:</label>\n                    <input value={createValues.recipeName} onChange={onChangeHandler} type=\"text\" id=\"recipeName\" name=\"recipeName\" />\n\n                    <label htmlFor=\"recipeChef\">Chef:</label>\n                    <input value={createValues.chef} onChange={onChangeHandler} type=\"text\" id=\"recipeChef\" name=\"chef\" />\n\n                    <label htmlFor=\"leg-title\">Time for cooking:</label>\n                    <input value={createValues.time} onChange={onChangeHandler} type=\"text\" id=\"title\" name=\"time\" />\n\n                    <label htmlFor=\"recipeImg\">Image:</label>\n                    <input value={createValues.imageUrl} onChange={onChangeHandler} type=\"text\" id=\"imageUrl\" name=\"imageUrl\" />\n\n                    <label htmlFor=\"summary\">Summary:</label>\n                    <textarea value={createValues.summary} onChange={onChangeHandler} name=\"summary\" id=\"summary\"></textarea>\n                    <input className=\"btn submit\" type=\"submit\" value=\"Create Recipe\" />\n                </div>\n            </form>\n        </section>\n    );\n}\n\n\n// import { useState } from \"react\";\n// import { useContext } from 'react'; \n// import { GlobalContext } from '../../contexts/GlobalContext';\n// export const CreatePage = () => {\n//     const { onCreateGameSubmit } = useContext(GlobalContext);\n//     const [values, setValues] = useState({\n//             title: '',\n//             category: '',\n//             maxLevel: '',\n//             imageUrl: '',\n//             summary: '',\n//     })\n\n//     const onChangeHandler = (e) => {\n//         setValues(state => ({...state, [e.target.name]: e.target.value}))\n//     }\n\n//     const onSubmit = (e) => {\n//         e.preventDefault();\n\n//         onCreateGameSubmit(values);\n//     }\n//     return(\n//         <section id=\"create-page\" className=\"auth\">\n//             <form id=\"create\" onSubmit={onSubmit}>\n//                 <div className=\"container\">\n\n//                     <h1>Create Game</h1>\n//                     <label htmlFor=\"leg-title\">Legendary title:</label>\n//                     <input value={values.title} onChange={onChangeHandler} type=\"text\" id=\"title\" name=\"title\" placeholder=\"Enter game title...\" />\n\n//                     <label htmlFor=\"category\">Category:</label>\n//                     <input value={values.category} onChange={onChangeHandler} type=\"text\" id=\"category\" name=\"category\" placeholder=\"Enter game category...\" />\n\n//                     <label htmlFor=\"levels\">MaxLevel:</label>\n//                     <input value={values.maxLevel} onChange={onChangeHandler} type=\"number\" id=\"maxLevel\" name=\"maxLevel\" min=\"1\" placeholder=\"1\" />\n\n//                     <label htmlFor=\"game-img\">Image:</label>\n//                     <input value={values.imageUrl} onChange={onChangeHandler} type=\"text\" id=\"imageUrl\" name=\"imageUrl\" placeholder=\"Upload a photo...\" />\n\n//                     <label htmlFor=\"summary\">Summary:</label>\n//                     <textarea value={values.summary} onChange={onChangeHandler} name=\"summary\" id=\"summary\"></textarea>\n//                     <input className=\"btn submit\" type=\"submit\" value=\"Create Game\" />\n//                 </div>\n//             </form>\n//         </section>\n//     );\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}