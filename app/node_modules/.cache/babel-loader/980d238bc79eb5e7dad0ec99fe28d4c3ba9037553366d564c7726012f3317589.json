{"ast":null,"code":"var _jsxFileName = \"/Users/alexpetrov/JavaScript/ReactApps/projectChefSteps copy/client/src/contexts/UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { userServiceFactory } from '../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [userState, setUserState] = useLocalStorage('user', {});\n  const navigate = useNavigate();\n  const userService = userServiceFactory(userState.accessToken);\n\n  // LOGIN\n  const onLoginSubmit = async data => {\n    if (data.email === '' || data.password === '') {\n      alert('All fealds are required!');\n      return;\n    }\n    try {\n      const result = await userService.login(data);\n      setUserState(result);\n      navigate('/catalog');\n    } catch (error) {\n      alert(`error: ${error}`);\n    }\n  };\n\n  // const onLoginSubmit = async (data) => {\n  //     try {\n  //         const result = await authService.login(data);\n\n  //         setAuth(result);\n\n  //         navigate('/catalog');\n  //     } catch (error) {\n  //         console.log('There is a problem');\n  //     }\n  // };\n\n  // REGISTER\n  const onRegisterSubmit = async data => {\n    if (data.email === '' || data.password === '') {\n      alert('All fealds are required!');\n      return;\n    }\n    if (data.password !== data['confirm-password']) {\n      alert('Password don\\'t match');\n      return;\n    }\n    const {\n      confirmPassword,\n      ...registerData\n    } = data;\n    try {\n      const result = await userService.register(registerData);\n      setUserState(result);\n      navigate('/catalog');\n    } catch (error) {\n      alert(`error: ${error}`);\n    }\n  };\n\n  // const onRegisterSubmit = async (values) => {\n  //     const { confirmPassword, ...registerData } = values;\n  //     if (confirmPassword !== registerData.password) {\n  //         return;\n  //     }\n\n  //     try {\n  //         const result = await authService.register(registerData);\n\n  //         setAuth(result);\n\n  //         navigate('/catalog');\n  //     } catch (error) {\n  //         console.log('There is a problem');\n  //     }\n  // };\n\n  // LOGOUT\n\n  const onLogoutSubmit = async () => {\n    await userService.logout();\n    setUserState({});\n  };\n\n  // const onLogout = async () => {\n  //     await authService.logout();\n\n  //     setAuth({});\n  // };\n  console.log(userState);\n  const contextValues = {\n    onLoginSubmit,\n    onRegisterSubmit,\n    onLogoutSubmit,\n    userId: userState._id,\n    token: userState.accessToken,\n    userEmail: userState.email,\n    isAuthenticated: !!userState.accessToken\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: contextValues,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(AuthProvider, \"OccI7V7Yr1XcOXM2V9NVqCnEjHw=\", false, function () {\n  return [useLocalStorage, useNavigate];\n});\n_c = AuthProvider;\nexport const useAuthContext = () => {\n  _s2();\n  const context = useContext(UserContext);\n  return context;\n};\n_s2(useAuthContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useNavigate","useLocalStorage","userServiceFactory","jsxDEV","_jsxDEV","Fragment","_Fragment","UserContext","AuthProvider","_ref","_s","children","userState","setUserState","navigate","userService","accessToken","onLoginSubmit","data","email","password","alert","result","login","error","onRegisterSubmit","confirmPassword","registerData","register","onLogoutSubmit","logout","console","log","contextValues","userId","_id","token","userEmail","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuthContext","_s2","context","$RefreshReg$"],"sources":["/Users/alexpetrov/JavaScript/ReactApps/projectChefSteps copy/client/src/contexts/UserContext.js"],"sourcesContent":["import { createContext, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\n\nimport { userServiceFactory } from '../services/userService'; \n\nexport const UserContext = createContext();\n\nexport const AuthProvider = ({\n    children,\n}) => {\n    const [userState, setUserState] = useLocalStorage('user', {});\n    const navigate = useNavigate();\n\n    const userService = userServiceFactory(userState.accessToken)\n\n     // LOGIN\n  const onLoginSubmit = async (data) => {\n    if (data.email === '' || data.password === '') {\n        alert('All fealds are required!');\n        return;\n    }\ntry {\n    const result = await userService.login(data);\n\n    setUserState(result);\n\n    navigate('/catalog');\n} catch (error) {\n    alert(`error: ${error}`);\n}\n};\n\n    // const onLoginSubmit = async (data) => {\n    //     try {\n    //         const result = await authService.login(data);\n\n    //         setAuth(result);\n\n    //         navigate('/catalog');\n    //     } catch (error) {\n    //         console.log('There is a problem');\n    //     }\n    // };\n\n    // REGISTER\n  const onRegisterSubmit = async (data) => {\n    if (data.email === '' || data.password === '') {\n        alert('All fealds are required!');\n        return;\n    } \n    \n    if (data.password !== data['confirm-password']) {\n        alert('Password don\\'t match');\n        return;\n    }\n    const { confirmPassword, ...registerData } = data;\n        try {\n            const result = await userService.register(registerData);\n\n            setUserState(result);\n\n            navigate('/catalog');\n        } catch (error) {\n            alert(`error: ${error}`);\n        }\n        \n    };\n\n\n    // const onRegisterSubmit = async (values) => {\n    //     const { confirmPassword, ...registerData } = values;\n    //     if (confirmPassword !== registerData.password) {\n    //         return;\n    //     }\n\n    //     try {\n    //         const result = await authService.register(registerData);\n\n    //         setAuth(result);\n\n    //         navigate('/catalog');\n    //     } catch (error) {\n    //         console.log('There is a problem');\n    //     }\n    // };\n\n\n     // LOGOUT\n\n    const onLogoutSubmit = async () => {\n        await userService.logout();\n        setUserState({});\n        \n    }  \n\n\n    // const onLogout = async () => {\n    //     await authService.logout();\n\n    //     setAuth({});\n    // };\n    console.log(userState);\n    const contextValues = {\n        onLoginSubmit,\n        onRegisterSubmit,\n        onLogoutSubmit,\n        userId: userState._id,\n        token: userState.accessToken,\n        userEmail: userState.email,\n        isAuthenticated: !!userState.accessToken,\n    };\n\n    return (\n        <>\n            <UserContext.Provider value={contextValues}>\n                {children}\n            </UserContext.Provider>\n        </>\n    )\n};\n\nexport const useAuthContext = () => {\n    const context = useContext(UserContext);\n\n    return context;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}