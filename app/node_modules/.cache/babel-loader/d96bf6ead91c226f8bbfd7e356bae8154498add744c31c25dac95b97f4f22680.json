{"ast":null,"code":"var _jsxFileName = \"/Users/alexpetrov/Documents/GitTesting/ChefPinko copy copy/app/src/contexts/BasketContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useStorage } from '../hooks/useStorage';\n\n// import * as appService  from '../services/appService'; \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BasketContext = /*#__PURE__*/createContext();\nexport const BasketProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [items, setItems] = useState([]);\n  function addItem(item) {\n    setItems([...items, item]);\n  }\n  const contextValues = {\n    items,\n    setItems\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BasketContext.Provider, {\n      value: contextValues,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n// const [userState, setUserState] = useStorage('userData', {});\n//     const navigate = useNavigate();\n//     const [showModal, setShowModal] = useState(false);\n//     const [errorText, setErrorText] = useState();\n//     // const userService = userServiceFactory(userState.accessToken)\n\n//      // LOGIN\n//      const onLoginSubmit = async (data) => {\n//         if (data.email === '' || data.password === '') {\n//             setShowModal(true);\n//             setErrorText('All fealds are required!')\n//             return;\n//         } else {\n\n//             try {\n//                 const result = await appService.login(data.email, data.password);\n\n//                 setUserState(result);\n\n//                 navigate('/catalog');\n//                 return;\n//             } catch (error) {\n//                 setShowModal(true);\n//                 setErrorText(error.message);\n//             }\n//         }\n\n//     };\n\n//     // REGISTER\n//     const onRegisterSubmit = async (data) => {\n//         if (data.email === '' || data.password === '') {\n//             setShowModal(true);\n//             setErrorText('All fealds are required!')\n//             return;\n//         } \n\n//         if (data.password !== data['confirm-password']) {\n//             setShowModal(true);\n//             setErrorText('Password don\\'t match')\n//             return;\n//         }\n\n//             try {\n//                 const result = await appService.register(data.email, data.password);\n\n//                 setUserState(result);\n\n//                 navigate('/catalog');\n//                 return;\n//             } catch (error) {\n//                 setShowModal(true);\n//                 setErrorText(error.message);\n//             }\n\n//         };  \n\n//     // LOGOUT\n\n//     const onLogoutSubmit = async () => {\n//         await appService.logout();\n//         setUserState({});\n\n//     } \n_s(BasketProvider, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = BasketProvider;\nvar _c;\n$RefreshReg$(_c, \"BasketProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","BasketContext","BasketProvider","_ref","_s","children","items","setItems","addItem","item","contextValues","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexpetrov/Documents/GitTesting/ChefPinko copy copy/app/src/contexts/BasketContext.js"],"sourcesContent":["import { createContext, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useStorage } from '../hooks/useStorage';\n\n// import * as appService  from '../services/appService'; \n\n\nexport const BasketContext = createContext();\n\n\nexport const BasketProvider = ({\n    children,\n}) => {\n    const [items, setItems] = useState([]);\n\n    function addItem(item) {\n        setItems([...items, item]);\n      }\n\n    \n    const contextValues = {\n        items,\n        setItems,\n    };\n \n\n    return (\n        <>\n            <BasketContext.Provider value={contextValues}>\n                {children}\n            </BasketContext.Provider>\n        </>\n    )\n};\n\n\n\n\n\n// const [userState, setUserState] = useStorage('userData', {});\n//     const navigate = useNavigate();\n//     const [showModal, setShowModal] = useState(false);\n//     const [errorText, setErrorText] = useState();\n//     // const userService = userServiceFactory(userState.accessToken)\n\n//      // LOGIN\n//      const onLoginSubmit = async (data) => {\n//         if (data.email === '' || data.password === '') {\n//             setShowModal(true);\n//             setErrorText('All fealds are required!')\n//             return;\n//         } else {\n\n//             try {\n//                 const result = await appService.login(data.email, data.password);\n            \n//                 setUserState(result);\n            \n//                 navigate('/catalog');\n//                 return;\n//             } catch (error) {\n//                 setShowModal(true);\n//                 setErrorText(error.message);\n//             }\n//         }\n    \n//     };\n\n//     // REGISTER\n//     const onRegisterSubmit = async (data) => {\n//         if (data.email === '' || data.password === '') {\n//             setShowModal(true);\n//             setErrorText('All fealds are required!')\n//             return;\n//         } \n        \n//         if (data.password !== data['confirm-password']) {\n//             setShowModal(true);\n//             setErrorText('Password don\\'t match')\n//             return;\n//         }\n    \n//             try {\n//                 const result = await appService.register(data.email, data.password);\n\n//                 setUserState(result);\n\n//                 navigate('/catalog');\n//                 return;\n//             } catch (error) {\n//                 setShowModal(true);\n//                 setErrorText(error.message);\n//             }\n            \n//         };  \n\n//     // LOGOUT\n\n//     const onLogoutSubmit = async () => {\n//         await appService.logout();\n//         setUserState({});\n        \n//     } "],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGA,OAAO,MAAMC,aAAa,gBAAGN,aAAa,EAAE;AAG5C,OAAO,MAAMO,cAAc,GAAGC,IAAA,IAExB;EAAAC,EAAA;EAAA,IAFyB;IAC3BC;EACJ,CAAC,GAAAF,IAAA;EACG,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,SAASY,OAAOA,CAACC,IAAI,EAAE;IACnBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEG,IAAI,CAAC,CAAC;EAC5B;EAGF,MAAMC,aAAa,GAAG;IAClBJ,KAAK;IACLC;EACJ,CAAC;EAGD,oBACIT,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA,CAACG,aAAa,CAACU,QAAQ;MAACC,KAAK,EAAEF,aAAc;MAAAL,QAAA,EACxCA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACY,iBAC1B;AAEX,CAAC;;AAMD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AAAAZ,EAAA,CA5FaF,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}