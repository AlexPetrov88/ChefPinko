{"ast":null,"code":"import { requestFactory } from './requester';\nconst baseUrl = 'http://localhost:3030/data/games';\nexport const gameServiceFactory = token => {\n  const request = requestFactory(token);\n  const getAll = async () => {\n    const result = await request.get(baseUrl);\n    const games = Object.values(result);\n    return games;\n  };\n  const getOne = async gameId => {\n    const result = await request.get(`${baseUrl}/${gameId}`);\n    return result;\n  };\n  const create = async gameData => {\n    const result = await request.post(baseUrl, gameData);\n    console.log(result);\n    return result;\n  };\n  const edit = (gameId, data) => request.put(`${baseUrl}/${gameId}`, data);\n  const deleteGame = gameId => request.delete(`${baseUrl}/${gameId}`);\n  return {\n    getAll,\n    getOne,\n    create,\n    edit,\n    delete: deleteGame\n  };\n};\n\n// import * as api from './api.js';\n\n// export const login = api.login;\n// export const register = api.register;\n// export const logout = api.logout;\n\n// const endpoints = {\n//     all: '/data/recipes?sortBy=_createdOn%20desc',\n//     recipeById: '/data/recipes/',\n//     lastRecipes: '/data/recipes?sortBy=_createdOn%20desc&distinct=category',\n//     createRecipe: '/data/recipes',\n//     edit: '/data/recipes/',\n//     delete: '/data/recipes/',\n\n//     createComment: '/data/comments',\n//     CommentsById: '/data/comments/',\n// }\n\n// export async function getAllRecipes() {\n//     return api.get(endpoints.all);\n// }\n\n// export async function getRecipeById(id) {\n//     return api.get(endpoints.recipeById + id);\n// }\n// export async function getLastGames() {\n//     return api.get(endpoints.lastRecipes);\n// }\n\n// export async function postCreateRecipe(data) {\n//     return api.post(endpoints.createRecipe, data)\n// }\n\n// export async function editRecipe(id, data) {\n//     return api.put(endpoints.edit + id, data)\n// } \n\n// export async function deleteRecipe(id) {\n//     return api.del(endpoints.delete + id)\n// }\n\n// export async function postCreateCommets(recipeId, comment) {\n//     return api.post(endpoints.createComment, { recipeId, comment})\n// }\n\n// export async function getCommentsById(recipeId) {\n//     const searchQuery = encodeURIComponent(`recipeId=\"${recipeId}\"`);\n//     const relationQuery = encodeURIComponent(`author=_ownerId:users`);\n\n//     const result = await api.get(`${endpoints.CommentsById}$?where=${searchQuery}&load=${relationQuery}`);\n//     const comments = Object.values(result);\n\n//     return comments;\n// };","map":{"version":3,"names":["requestFactory","baseUrl","gameServiceFactory","token","request","getAll","result","get","games","Object","values","getOne","gameId","create","gameData","post","console","log","edit","data","put","deleteGame","delete"],"sources":["/Users/alexpetrov/Documents/GitTesting/ChefPinko copy/app/src/services/appService.js"],"sourcesContent":["\n\nimport { requestFactory } from './requester';\n\nconst baseUrl = 'http://localhost:3030/data/games';\n\nexport const gameServiceFactory = (token) => {\n    const request = requestFactory(token);\n\n    const getAll = async () => {\n        const result = await request.get(baseUrl);\n        const games = Object.values(result);\n    \n        return games;\n    };\n    \n    const getOne = async (gameId) => {\n        const result = await request.get(`${baseUrl}/${gameId}`);\n    \n        return result;\n    };\n    \n    const create = async (gameData) => {\n        const result = await request.post(baseUrl, gameData);\n    \n        console.log(result);\n    \n        return result;\n    };\n    \n    const edit = (gameId, data) => request.put(`${baseUrl}/${gameId}`, data);\n\n    const deleteGame = (gameId) => request.delete(`${baseUrl}/${gameId}`);\n\n\n    return {\n        getAll,\n        getOne,\n        create,\n        edit,\n        delete: deleteGame,\n    };\n}\n\n\n// import * as api from './api.js';\n\n// export const login = api.login;\n// export const register = api.register;\n// export const logout = api.logout;\n\n// const endpoints = {\n//     all: '/data/recipes?sortBy=_createdOn%20desc',\n//     recipeById: '/data/recipes/',\n//     lastRecipes: '/data/recipes?sortBy=_createdOn%20desc&distinct=category',\n//     createRecipe: '/data/recipes',\n//     edit: '/data/recipes/',\n//     delete: '/data/recipes/',\n\n//     createComment: '/data/comments',\n//     CommentsById: '/data/comments/',\n// }\n\n// export async function getAllRecipes() {\n//     return api.get(endpoints.all);\n// }\n\n// export async function getRecipeById(id) {\n//     return api.get(endpoints.recipeById + id);\n// }\n// export async function getLastGames() {\n//     return api.get(endpoints.lastRecipes);\n// }\n\n// export async function postCreateRecipe(data) {\n//     return api.post(endpoints.createRecipe, data)\n// }\n\n// export async function editRecipe(id, data) {\n//     return api.put(endpoints.edit + id, data)\n// } \n\n// export async function deleteRecipe(id) {\n//     return api.del(endpoints.delete + id)\n// }\n\n\n\n// export async function postCreateCommets(recipeId, comment) {\n//     return api.post(endpoints.createComment, { recipeId, comment})\n// }\n\n\n// export async function getCommentsById(recipeId) {\n//     const searchQuery = encodeURIComponent(`recipeId=\"${recipeId}\"`);\n//     const relationQuery = encodeURIComponent(`author=_ownerId:users`);\n\n//     const result = await api.get(`${endpoints.CommentsById}$?where=${searchQuery}&load=${relationQuery}`);\n//     const comments = Object.values(result);\n\n//     return comments;\n// };\n\n\n\n\n\n\n\n\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,aAAa;AAE5C,MAAMC,OAAO,GAAG,kCAAkC;AAElD,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EACzC,MAAMC,OAAO,GAAGJ,cAAc,CAACG,KAAK,CAAC;EAErC,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,MAAMC,MAAM,GAAG,MAAMF,OAAO,CAACG,GAAG,CAACN,OAAO,CAAC;IACzC,MAAMO,KAAK,GAAGC,MAAM,CAACC,MAAM,CAACJ,MAAM,CAAC;IAEnC,OAAOE,KAAK;EAChB,CAAC;EAED,MAAMG,MAAM,GAAG,MAAOC,MAAM,IAAK;IAC7B,MAAMN,MAAM,GAAG,MAAMF,OAAO,CAACG,GAAG,CAAE,GAAEN,OAAQ,IAAGW,MAAO,EAAC,CAAC;IAExD,OAAON,MAAM;EACjB,CAAC;EAED,MAAMO,MAAM,GAAG,MAAOC,QAAQ,IAAK;IAC/B,MAAMR,MAAM,GAAG,MAAMF,OAAO,CAACW,IAAI,CAACd,OAAO,EAAEa,QAAQ,CAAC;IAEpDE,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;IAEnB,OAAOA,MAAM;EACjB,CAAC;EAED,MAAMY,IAAI,GAAGA,CAACN,MAAM,EAAEO,IAAI,KAAKf,OAAO,CAACgB,GAAG,CAAE,GAAEnB,OAAQ,IAAGW,MAAO,EAAC,EAAEO,IAAI,CAAC;EAExE,MAAME,UAAU,GAAIT,MAAM,IAAKR,OAAO,CAACkB,MAAM,CAAE,GAAErB,OAAQ,IAAGW,MAAO,EAAC,CAAC;EAGrE,OAAO;IACHP,MAAM;IACNM,MAAM;IACNE,MAAM;IACNK,IAAI;IACJI,MAAM,EAAED;EACZ,CAAC;AACL,CAAC;;AAGD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}