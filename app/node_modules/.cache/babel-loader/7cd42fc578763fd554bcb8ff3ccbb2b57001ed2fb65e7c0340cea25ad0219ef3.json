{"ast":null,"code":"var _jsxFileName = \"/Users/alexpetrov/JavaScript/ReactApps/projectChefSteps copy/client/src/contexts/GlobalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useStorage } from '../hooks/useStorage';\nimport * as appService from '../services/appService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [userState, setUserState] = useStorage('userData', {});\n  const navigate = useNavigate();\n  console.log(userState);\n  // const userService = userServiceFactory(userState.accessToken)\n\n  // LOGIN\n  const onLoginSubmit = async data => {\n    if (data.email === '' || data.password === '') {\n      alert('All fealds are required!');\n      return;\n    }\n    try {\n      const result = await appService.login(data.email, data.password);\n      setUserState(result);\n      navigate('/catalog');\n    } catch (error) {\n      alert(`error: ${error}`);\n    }\n  };\n\n  // REGISTER\n  const onRegisterSubmit = async data => {\n    if (data.email === '' || data.password === '') {\n      alert('All fealds are required!');\n      return;\n    }\n    if (data.password !== data['confirm-password']) {\n      alert('Password don\\'t match');\n      return;\n    }\n    try {\n      const result = await appService.register(data.email, data.password);\n      setUserState(result);\n      navigate('/catalog');\n    } catch (error) {\n      alert(`error: ${error}`);\n    }\n  };\n\n  // LOGOUT\n\n  const onLogoutSubmit = async () => {\n    await appService.logout();\n    setUserState({});\n  };\n  const contextValues = {\n    onLoginSubmit,\n    onRegisterSubmit,\n    onLogoutSubmit,\n    userId: userState.id,\n    token: userState.token,\n    userEmail: userState.email,\n    isAuthenticated: !!userState.token\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n      value: contextValues,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(GlobalProvider, \"56sfbIBwqJPgvnr2p4TSI2QLDSg=\", false, function () {\n  return [useStorage, useNavigate];\n});\n_c = GlobalProvider;\nexport const useAuthContext = () => {\n  _s2();\n  const context = useContext(GlobalContext);\n  return context;\n};\n\n// // where we set context\n//         import { GlobalContext } from './GlobalContext';\n\n//         const contextValues = {\n//             onChangeHandler,\n//             values,\n//         };\n\n//         return (\n//             <GlobalContext.Provider value={contextValues}>\n//             <Header /> \n\n//             <CreatePage />\n//             </GlobalContext.Provider>\n//         )\n\n// // where we use context\n//         import { useContext } from 'react'; \n//         import { GlobalContext } from './GlobalContext';\n\n// // write in component where we use context above return\n//         const { name, age, onChangeHandler } = useContext(GlobalContext);       \n_s2(useAuthContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useNavigate","useStorage","appService","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalContext","GlobalProvider","_ref","_s","children","userState","setUserState","navigate","console","log","onLoginSubmit","data","email","password","alert","result","login","error","onRegisterSubmit","register","onLogoutSubmit","logout","contextValues","userId","id","token","userEmail","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuthContext","_s2","context","$RefreshReg$"],"sources":["/Users/alexpetrov/JavaScript/ReactApps/projectChefSteps copy/client/src/contexts/GlobalContext.js"],"sourcesContent":["import { createContext, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useStorage } from '../hooks/useStorage';\n\nimport * as appService  from '../services/appService'; \n\n\nexport const GlobalContext = createContext();\n\n\nexport const GlobalProvider = ({\n    children,\n}) => {\n    const [userState, setUserState] = useStorage('userData', {});\n    const navigate = useNavigate();\n    console.log(userState);\n    // const userService = userServiceFactory(userState.accessToken)\n\n     // LOGIN\n     const onLoginSubmit = async (data) => {\n        if (data.email === '' || data.password === '') {\n            alert('All fealds are required!');\n            return;\n        }\n    try {\n        const result = await appService.login(data.email, data.password);\n    \n        setUserState(result);\n    \n        navigate('/catalog');\n    } catch (error) {\n        alert(`error: ${error}`);\n    }\n    };\n\n    // REGISTER\n    const onRegisterSubmit = async (data) => {\n        if (data.email === '' || data.password === '') {\n            alert('All fealds are required!');\n            return;\n        } \n        \n        if (data.password !== data['confirm-password']) {\n            alert('Password don\\'t match');\n            return;\n        }\n    \n            try {\n                const result = await appService.register(data.email, data.password);\n\n                setUserState(result);\n\n                navigate('/catalog');\n            } catch (error) {\n                alert(`error: ${error}`);\n            }\n            \n        };  \n\n    // LOGOUT\n\n    const onLogoutSubmit = async () => {\n        await appService.logout();\n        setUserState({});\n        \n    } \n    const contextValues = {\n        onLoginSubmit,\n        onRegisterSubmit,\n        onLogoutSubmit,\n        userId: userState.id,\n        token: userState.token,\n        userEmail: userState.email,\n        isAuthenticated: !!userState.token,\n    };\n \n\n    return (\n        <>\n            <GlobalContext.Provider value={contextValues}>\n                {children}\n            </GlobalContext.Provider>\n        </>\n    )\n};\n\nexport const useAuthContext = () => {\n    const context = useContext(GlobalContext);\n\n    return context;\n}\n\n\n\n\n\n\n\n\n\n// // where we set context\n//         import { GlobalContext } from './GlobalContext';\n\n//         const contextValues = {\n//             onChangeHandler,\n//             values,\n//         };\n\n//         return (\n//             <GlobalContext.Provider value={contextValues}>\n//             <Header /> \n\n//             <CreatePage />\n//             </GlobalContext.Provider>\n//         )\n\n\n// // where we use context\n//         import { useContext } from 'react'; \n//         import { GlobalContext } from './GlobalContext';\n\n\n// // write in component where we use context above return\n//         const { name, age, onChangeHandler } = useContext(GlobalContext);       "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}