{"ast":null,"code":"var _jsxFileName = \"/Users/alexpetrov/JavaScript/ReactApps/projectChefSteps copy/client/src/components/Details/Details.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n// import { useContext } from 'react'; \n// import { GlobalContext } from '../../contexts/GlobalContext';\n\nimport { recipesServiceFactory } from \"../../services/recipesService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Details = _ref => {\n  _s();\n  let {\n    onDeleteRecipe,\n    onEditHandler\n  } = _ref;\n  const [recipeData, setRecipeData] = useState({});\n  const {\n    detailsId\n  } = useParams();\n  const recipesService = recipesServiceFactory();\n  // const { onDeleteRecipe, onEditHandler } = useContext(GlobalContext);\n\n  useEffect(() => {\n    recipesService.getById(detailsId).then(res => {\n      setRecipeData(res);\n    });\n  }, [detailsId]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"details\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailImgContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipeData.imageUrl,\n          alt: \"\",\n          className: \"daetailImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"recipeTitle\",\n          children: \"Recipe Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"recipeName\",\n          children: recipeData.recipeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"recipeChef\",\n          children: recipeData.chef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recipeTimeForCooking\",\n          children: recipeData.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recipeSummary\",\n          children: recipeData.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => onDeleteRecipe(detailsId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => onEditHandler(detailsId),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n// export const Details = () => {\n//     const { onDeleteGame, onEditHandler } = useContext(GlobalContext);  \n//     const [username, setUsername] =useState('');\n//     const [comment, setComment] = useState('');\n//     const [comments, setComments] = useState([]);\n//     const {detailsId} = useParams();\n//     const [game, setGame] = useState({});\n\n//     useEffect(() => {\n//         getById(detailsId)\n//         .then(res => {\n//             setGame(res);\n//             return getCommentsById(detailsId)\n//         })\n//         .then(result => {\n//             setComments(result)\n//         })\n//     }, [detailsId]);\n\n//   const onCommentSubmit =async (e) => {\n//         e.preventDefault();\n\n//       await postCreate({\n//             detailsId,\n//             username,\n//             comment,\n//         })\n//         setUsername('');\n//         setComment('');\n//     }\n\n//   const onUsernameChange = (e) => {\n//       setUsername(e.target.value);\n//   }\n\n//   const onCommentChange = (e) => {\n//       setComment(e.target.value)\n//   }\n//   console.log(game);\n//     return(\n//         <section id=\"game-details\">\n//             <h1>Game Details</h1>\n//             <div className=\"info-section\">\n\n//                 <div className=\"game-header\">\n//                     <img className=\"game-img\" src={game.imageUrl} />\n//                     <h1>{game.title}</h1>\n//                     <span className=\"levels\">MaxLevel: {game.maxLevel}</span>\n//                     <p className=\"type\">{game.category}</p>\n//                 </div>\n\n//                 <p className=\"text\">\n//                     {game.summary}\n//                 </p>\n\n//                 {/* <!-- Bonus ( for Guests and Users ) --> */}\n//                 <div className=\"details-comments\">\n//                     <h2>Comments:</h2>\n//                     <ul>\n//                         {/* <!-- list all comments for current game (If any) --> */}\n//                         {comments.map(x => (\n//                             <li key={x._id} className=\"comment\">\n//                             <p>{x.username}: {x.comment}</p>\n//                         </li>\n//                         ))}\n//                     </ul>\n\n//                     {/* <!-- Display paragraph: If there are no games in the database --> */}\n//                     {comments.length === 0 && (\n//                          <p className=\"no-comment\">No comments.</p>\n//                     )}\n//                 </div>\n\n//                 {/* <!-- Edit/Delete buttons ( Only for creator of this game )  --> */}\n//                 <div className=\"buttons\">\n//                     <Link className=\"button\" onClick={() => onEditHandler(detailsId)}>Edit</Link>\n//                     <Link to=\"/catalog\"  className=\"button\" onClick={() => onDeleteGame(detailsId)}>Delete</Link>\n//                 </div>\n//             </div>\n\n//             {/* <!-- Bonus --> */}\n//             {/* <!-- Add Comment ( Only for logged-in users, which is not creators of the current game ) --> */}\n//             <article className=\"create-comment\">\n//                 <label>Add new comment:</label>\n//                 <form className=\"form\" onSubmit={onCommentSubmit}>\n//                     <input type=\"text\" name=\"username\" placeholder=\"Pesho\" value={username} onChange={onUsernameChange}/>\n//                     <textarea name=\"comment\" placeholder=\"Comment......\" value={comment} onChange={onCommentChange}></textarea>\n//                     <input className=\"btn submit\" type=\"submit\" value=\"Add Comment\" />\n//                 </form>\n//             </article>\n\n//         </section>\n//     );\n// }\n_s(Details, \"r0wNwvOMSEWNfebrmTeOqf5SlbA=\", false, function () {\n  return [useParams];\n});\n_c = Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["useState","useEffect","useParams","Link","recipesServiceFactory","jsxDEV","_jsxDEV","Details","_ref","_s","onDeleteRecipe","onEditHandler","recipeData","setRecipeData","detailsId","recipesService","getById","then","res","className","children","src","imageUrl","alt","fileName","_jsxFileName","lineNumber","columnNumber","recipeName","chef","time","summary","onClick","_c","$RefreshReg$"],"sources":["/Users/alexpetrov/JavaScript/ReactApps/projectChefSteps copy/client/src/components/Details/Details.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n// import { useContext } from 'react'; \n// import { GlobalContext } from '../../contexts/GlobalContext';\n\nimport { recipesServiceFactory } from \"../../services/recipesService\";\n\n\n\nexport const Details = ({\n    onDeleteRecipe,\n    onEditHandler,\n}) => {\n    const [ recipeData, setRecipeData ] = useState({});\n    const { detailsId } = useParams();\n    const recipesService = recipesServiceFactory();\n    // const { onDeleteRecipe, onEditHandler } = useContext(GlobalContext);\n\n\n    useEffect(() => {\n        recipesService.getById(detailsId)\n        .then(res => {\n            setRecipeData(res);\n        })\n    }, [detailsId])\n\n    return(\n        <section className=\"details\">\n\n            <div className=\"detailsContainer\">\n                <div className=\"detailImgContainer\">\n                    <img src={recipeData.imageUrl} alt=\"\" className=\"daetailImg\" />\n                </div>\n                <div className=\"detailContent\">\n                    <h2 className=\"recipeTitle\">Recipe Details</h2>\n                    <h3 className=\"recipeName\">{recipeData.recipeName}</h3>\n                    <span className=\"recipeChef\">{recipeData.chef}</span>\n                    <p className=\"recipeTimeForCooking\">{recipeData.time}</p>\n                    <p className=\"recipeSummary\">{recipeData.summary}</p>\n                    <button className=\"btn\" onClick={() => onDeleteRecipe(detailsId)}>Delete</button>\n                    <button className=\"btn\" onClick={() => onEditHandler(detailsId)}>Edit</button>\n                    <button className=\"btn\">Rating</button>\n                </div>\n            </div>\n\n        </section>\n    );\n}\n\n\n\n\n\n// export const Details = () => {\n//     const { onDeleteGame, onEditHandler } = useContext(GlobalContext);  \n//     const [username, setUsername] =useState('');\n//     const [comment, setComment] = useState('');\n//     const [comments, setComments] = useState([]);\n//     const {detailsId} = useParams();\n//     const [game, setGame] = useState({});\n    \n//     useEffect(() => {\n//         getById(detailsId)\n//         .then(res => {\n//             setGame(res);\n//             return getCommentsById(detailsId)\n//         })\n//         .then(result => {\n//             setComments(result)\n//         })\n//     }, [detailsId]);\n\n//   const onCommentSubmit =async (e) => {\n//         e.preventDefault();\n\n//       await postCreate({\n//             detailsId,\n//             username,\n//             comment,\n//         })\n//         setUsername('');\n//         setComment('');\n//     }\n\n//   const onUsernameChange = (e) => {\n//       setUsername(e.target.value);\n//   }\n\n//   const onCommentChange = (e) => {\n//       setComment(e.target.value)\n//   }\n//   console.log(game);\n//     return(\n//         <section id=\"game-details\">\n//             <h1>Game Details</h1>\n//             <div className=\"info-section\">\n\n//                 <div className=\"game-header\">\n//                     <img className=\"game-img\" src={game.imageUrl} />\n//                     <h1>{game.title}</h1>\n//                     <span className=\"levels\">MaxLevel: {game.maxLevel}</span>\n//                     <p className=\"type\">{game.category}</p>\n//                 </div>\n\n//                 <p className=\"text\">\n//                     {game.summary}\n//                 </p>\n\n\n\n\n//                 {/* <!-- Bonus ( for Guests and Users ) --> */}\n//                 <div className=\"details-comments\">\n//                     <h2>Comments:</h2>\n//                     <ul>\n//                         {/* <!-- list all comments for current game (If any) --> */}\n//                         {comments.map(x => (\n//                             <li key={x._id} className=\"comment\">\n//                             <p>{x.username}: {x.comment}</p>\n//                         </li>\n//                         ))}\n//                     </ul>\n                    \n//                     {/* <!-- Display paragraph: If there are no games in the database --> */}\n//                     {comments.length === 0 && (\n//                          <p className=\"no-comment\">No comments.</p>\n//                     )}\n//                 </div>\n\n\n\n\n//                 {/* <!-- Edit/Delete buttons ( Only for creator of this game )  --> */}\n//                 <div className=\"buttons\">\n//                     <Link className=\"button\" onClick={() => onEditHandler(detailsId)}>Edit</Link>\n//                     <Link to=\"/catalog\"  className=\"button\" onClick={() => onDeleteGame(detailsId)}>Delete</Link>\n//                 </div>\n//             </div>\n\n//             {/* <!-- Bonus --> */}\n//             {/* <!-- Add Comment ( Only for logged-in users, which is not creators of the current game ) --> */}\n//             <article className=\"create-comment\">\n//                 <label>Add new comment:</label>\n//                 <form className=\"form\" onSubmit={onCommentSubmit}>\n//                     <input type=\"text\" name=\"username\" placeholder=\"Pesho\" value={username} onChange={onUsernameChange}/>\n//                     <textarea name=\"comment\" placeholder=\"Comment......\" value={comment} onChange={onCommentChange}></textarea>\n//                     <input className=\"btn submit\" type=\"submit\" value=\"Add Comment\" />\n//                 </form>\n//             </article>\n\n//         </section>\n//     );\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}